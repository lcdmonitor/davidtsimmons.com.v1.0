@using System.Collections.Generic
@using CodeKicker.BBCode

@functions {
    static IList<BBTag> _AllowedTags = new List<BBTag> {
                new BBTag("p", "<p>", "</p>"),
                new BBTag("b", "<strong>", "</strong>"),
                new BBTag("left", "<div style=\"text-align:left\">", "</div>"),
                new BBTag("right", "<div style=\"text-align:right\">", "</div>"),
                new BBTag("center", "<div style=\"text-align:center\">", "</div>"),
                new BBTag("i", "<em>", "</em>"),
                new BBTag("u", "<span style=\"text-decoration:underline;\">", "</span>"),
                new BBTag("code", "<pre class=\"prettyprint\"><code>", "</code></pre>"),
                new BBTag("img", "<img src=\"${content}\" />", "", false, true),
                new BBTag("quote", "<blockquote>", "</blockquote>"),
                new BBTag("list", "<ul>", "</ul>"),
                new BBTag("ordered", "<ol>", "</ol>"),
                new BBTag("*", "<li>", "</li>", true, false),
                new BBTag("url", "<a href=\"${href}\">", "</a>", new BBAttribute("href", ""), new BBAttribute("href", "href")),
                new BBTag("hr", "<hr>", "", true, false),
                new BBTag("h3", "<h3>", "</h3>"),
                new BBTag("h2", "<h2>", "</h2>"),
                new BBTag("h1", "<h1>", "</h1>"),
                new BBTag("youtube", "<iframe width=\"420\" height=\"315\" src=\"https://www.youtube.com/embed/${content}\" frameborder=\"0\" allowfullscreen>", "</iframe>"),
                new BBTag("vimeo", "<iframe src=\"https://player.vimeo.com/video/${content}\" width=\"500\" height=\"281\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen>", "</iframe>")
    };
    public static void Init(IList<CodeKicker.BBCode.BBTag> allowedTags, bool appendToDefaults = true)
    {
        if (appendToDefaults)
            foreach (var bbTag in allowedTags)
                _AllowedTags.Add(bbTag);
        else
            _AllowedTags = allowedTags;
    }

    public static object ToHtml(string input, bool encode = false, string errorMode = "ErrorFree", IList<BBTag> allowedTags = null)
    {
        IList<BBTag> tags = _AllowedTags;
        if (allowedTags != null)
            tags = allowedTags;

        ErrorMode enErrorMode;
        Enum.TryParse<ErrorMode>(errorMode, out enErrorMode);
        CodeKicker.BBCode.BBCodeParser parser = new CodeKicker.BBCode.BBCodeParser(tags);
        parser = new BBCodeParser(enErrorMode, parser.TextNodeHtmlTemplate, tags);
        if(encode)
            return parser.ToHtml(input);
        else
            return new HtmlString(parser.ToHtml(input));
    }

    public static IList<BBTag> GetAllowedTags()
    {
        return _AllowedTags;
    }
}